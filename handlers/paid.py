# handlers/paid.py

from aiogram import types, Router

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º send_invoice –∏–∑ payment, —á—Ç–æ–±—ã —Ç–∞–º —Å–æ–±—Ä–∞–Ω –≤–µ—Å—å Invoice-—Ñ–ª–æ—É
from handlers.payment import send_invoice
from core.database import add_user, add_username

router = Router()

# –ó–∞–¥–∞—ë–º —Ç–æ–ª—å–∫–æ –º–µ—Å—è—Ü—ã ‚Äî –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é (—Ü–µ–Ω–∞, —á–∞—Å—ã –∏ —Ç.–ø.) –∑–∞–±–∏—Ä–∞–µ–º –∏–∑ payment.py
paid_options = {
    "paid_config_1": {"months": 1},
    "paid_config_3": {"months": 3},
    "paid_config_6": {"months": 6},
    "paid_config_12": {"months": 12},
}


@router.callback_query(lambda c: c.data in paid_options.keys())
async def handle_paid_config_callback(callback: types.CallbackQuery):
    """
    1) –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª ‚Äúpaid_config_X‚Äù –≤ –º–µ–Ω—é.
    2) –ú—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ ‚ÄúüîÑ –§–æ—Ä–º–∏—Ä—É–µ–º —Å—á—ë—Ç‚Ä¶‚Äù
    3) –ü–æ—Å–ª–µ edit_text —Å—Ä–∞–∑—É –≤—ã–∑—ã–≤–∞–µ–º send_invoice(callback, payload),
       —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π Invoice.
    """
    tg_id = callback.from_user.id
    option_key = callback.data  # –Ω–∞–ø—Ä–∏–º–µ—Ä, "paid_config_3"
    months = paid_options[option_key]["months"]

    # 1) –°–æ–∑–¥–∞—ë–º/–æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    username = callback.from_user.username or "Anon"
    await add_user(tg_id, username)
    await add_username(tg_id, username)

    # 2) –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback.message.edit_text(
        f"üîÑ –§–æ—Ä–º–∏—Ä—É–µ–º —Å—á—ë—Ç –¥–ª—è —Ç–∞—Ä–∏—Ñ–∞ *{months}* –º–µ—Å‚Ä¶\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ."
    )
    # –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä ¬´—á–∞—Å–∏–∫–æ–≤¬ª
    await callback.answer()

    # 3) –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º payload = "<tg_id>:<option_key>"
    payload = f"{tg_id}:{option_key}"

    # 4) –í—ã–∑—ã–≤–∞–µ–º send_invoice –∏–∑ payment.py, –æ–Ω —Å–¥–µ–ª–∞–µ—Ç answer_invoice()
    await send_invoice(callback, payload)
